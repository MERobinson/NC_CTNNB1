[["index.html", "NC CTNNB1 project - Nehir Cosgun Section1 Project Overview", " NC CTNNB1 project - Nehir Cosgun Mark Robinson 2021-03-10 Section1 Project Overview …placeholder… "],["ikaros-kobcat-gof-de.html", "Section2 Ikaros KO/Bcat GOF DE 2.1 Background 2.2 Setup 2.3 Sample Info 2.4 Differential Expression 2.5 Annotate and tidy 2.6 Volano plot 2.7 Full GSEA 2.8 Select GSEA 2.9 GSEA plots 2.10 Downloads 2.11 Session info", " Section2 Ikaros KO/Bcat GOF DE 2.1 Background To identify genes mis-regulated by beta-catenin (bcat) in an Ikaros-dependent manner, RNA-seq was performed on pre-B cells from CTNNB1^Ex3fl mice that allow inducible bcat gain-of-function (GOF) with addition of Cre. Both GOF and control cells were additionally transfected with sgRNA targetting Ikzf1 and Ikzf3, or not targetting control (NTC) guides. 2.2 Setup # load libraries library(tidyverse) library(tximport) library(DESeq2) library(openxlsx) library(DT) library(EnsDb.Mmusculus.v79) txdb &lt;- EnsDb.Mmusculus.v79 # make tx2gene k &lt;- keys(txdb, keytype = &quot;TXID&quot;) tx2gene &lt;- select(txdb, k, &quot;GENEID&quot;, &quot;TXID&quot;) 2.3 Sample Info files &lt;- list.files(&quot;../processed_data/RNAseq/IkKO_bcatGOF_salmon&quot;, pattern = &quot;quant.sf&quot;, recursive = T, full.names = T) pattern &lt;- &quot;^.+/Ctnnb1\\\\-GOF_(cre|ert2)\\\\-(NTC|Ikzf1\\\\-3\\\\-KO)\\\\-([0-9])/quant.sf$&quot; smi &lt;- data.frame(sample_id = NA, treatment = sub(pattern, &quot;\\\\1&quot;, files), condition = sub(pattern, &quot;\\\\2&quot;, files), replicate = sub(pattern, &quot;\\\\3&quot;, files)) %&gt;% mutate(condition = factor(condition, levels = c(&quot;NTC&quot;,&quot;Ikzf1-3-KO&quot;), labels = c(&quot;NTC&quot;,&quot;IkKO&quot;)), treatment = factor(treatment, levels = c(&quot;ert2&quot;,&quot;cre&quot;), labels = c(&quot;ERT2&quot;,&quot;CreERT2&quot;)), combined = paste0(condition, &quot;_&quot;, treatment), sample_id = paste0(combined, &quot;_r&quot;, replicate), path = files) %&gt;% dplyr::select(1:3,5,4,6) names(files) &lt;- smi$sample_id smi %&gt;% arrange(sample_id) %&gt;% DT::datatable(escape = F, rownames = F, colnames = c(&quot;Sample ID&quot;, &quot;Treatment&quot;, &quot;Condition&quot;, &quot;Combined&quot;, &quot;Replicate&quot;, &quot;File Path&quot;), options = list( scrollX = TRUE, columnDefs = list(list( targets = 5, render = JS( &quot;function(data, type, row, meta) {&quot;, &quot;return type === &#39;display&#39; &amp;&amp; data.length &gt; 35 ?&quot;, &quot;&#39;&lt;span title=\\&quot;&#39; + data + &#39;\\&quot;&gt;&#39; + data.substr(0, 35) + &#39;...&lt;/span&gt;&#39; : data;&quot;, &quot;}&quot;))) ), callback = JS(&#39;table.page(3).draw(false);&#39;)) 2.4 Differential Expression Note 2021-03-05 MER: changed method here vs original analysis on 2020-09-29 to include lfcShrinkage in order to adjust L2FC estimates for low-abundance genes. Majority of changes remain unchanged but some previous outliers such as Brca2 have been substantially decreased. txi &lt;- tximport(files, type = &quot;salmon&quot;, tx2gene = tx2gene, ignoreTxVersion = T) dds &lt;- DESeqDataSetFromTximport(txi, colData = smi, design = ~combined) dds &lt;- dds[rowMeans(counts(dds)) &gt; 5, ] dds &lt;- DESeq(dds) contrasts &lt;- list(NTC_Cre_vs_NTC_ERT2 = &quot;NTC_CreERT2_vs_NTC_ERT2&quot;, Ik_Cre_vs_Ik_ERT2 = &quot;IkKO_CreERT2_vs_IkKO_ERT2&quot;, Ik_ERT2_vs_NTC_ERT2 = &quot;IkKO_ERT2_vs_NTC_ERT2&quot;, Ik_Cre_vs_NTC_Cre = &quot;IkKO_CreERT2_vs_NTC_CreERT2&quot;) deres &lt;- lapply(contrasts, function(contrast) { a &lt;- sub(&quot;^(.+)_vs_(.+)$&quot;, &quot;\\\\1&quot;, contrast) b &lt;- sub(&quot;^(.+)_vs_(.+)$&quot;, &quot;\\\\2&quot;, contrast) res &lt;- results(dds, contrast=c(&quot;combined&quot;, a, b)) lfcShrink(dds, contrast = c(&quot;combined&quot;, a, b), res = res, type = &quot;normal&quot;) }) dds2 &lt;- DESeqDataSetFromTximport(txi, colData = smi, design = ~treatment+condition+treatment:condition) dds2 &lt;- dds2[rowMeans(counts(dds2)) &gt; 5, ] dds2 &lt;- DESeq(dds2) deres$Cre_Ik_interaction &lt;- results(dds2, name = &quot;treatmentCreERT2.conditionIkKO&quot;) deres$Cre_Ik_interaction &lt;- lfcShrink(dds2, contrast = &quot;treatmentCreERT2.conditionIkKO&quot;, res = deres$Cre_Ik_interaction, type = &quot;ashr&quot;) 2.5 Annotate and tidy rlog &lt;- rlog(dds) genesymb &lt;- mapIds(txdb, keys = rownames(deres[[1]]), keytype = &quot;GENEID&quot;, column = &quot;SYMBOL&quot;) deanno &lt;- data.frame(gene_symbol = genesymb, ensembl_id = rownames(deres[[1]]), L2FC_NTC_Cre_vs_NTC_ERT2 = deres$NTC_Cre_vs_NTC_ERT2$log2FoldChange, L2FC_Ik_Cre_vs_Ik_ERT2 = deres$Ik_Cre_vs_Ik_ERT2$log2FoldChange, L2FC_Ik_ERT2_vs_NTC_ERT2 = deres$Ik_ERT2_vs_NTC_ERT2$log2FoldChange, L2FC_Ik_Cre_vs_NTC_Cre = deres$Ik_Cre_vs_NTC_Cre$log2FoldChange, L2FC_Cre_Ik_interaction = deres$Ik_Cre_vs_Ik_ERT2$log2FoldChange - deres$NTC_Cre_vs_NTC_ERT2$log2FoldChange, padj_NTC_Cre_vs_NTC_ERT2 = deres$NTC_Cre_vs_NTC_ERT2$padj, padj_Ik_Cre_vs_Ik_ERT2 = deres$Ik_Cre_vs_Ik_ERT2$padj, padj_Ik_ERT2_vs_NTC_ERT2 = deres$Ik_ERT2_vs_NTC_ERT2$padj, padj_Ik_Cre_vs_NTC_Cre = deres$Ik_Cre_vs_NTC_Cre$padj, padj_Cre_Ik_interaction = deres$Cre_Ik_interaction$padj, av_expr = rowMeans(assay(rlog)), av_NTC_ERT2 = rowMeans(assay(rlog)[,grep(&quot;NTC_ERT2&quot;, colnames(rlog))]), av_NTC_Cre = rowMeans(assay(rlog)[,grep(&quot;NTC_CreERT2&quot;, colnames(rlog))]), av_IkKO_ERT2 = rowMeans(assay(rlog)[,grep(&quot;IkKO_ERT2&quot;, colnames(rlog))]), av_IkKO_Cre = rowMeans(assay(rlog)[,grep(&quot;IkKO_CreERT2&quot;, colnames(rlog))])) deanno &lt;- cbind(deanno, assay(rlog)) write.xlsx(deanno, &quot;../results/IkKO_bcatGOF_DE.2021-03-05.xlsx&quot;, firstRow = TRUE, firstCol = TRUE) saveRDS(deanno, &quot;../processed_data/RNAseq/IkKO_bcatGOF_DE.2021-03-05.rds&quot;) deanno &lt;- readRDS(&quot;../processed_data/RNAseq/IkKO_bcatGOF_DE.2021-03-05.rds&quot;) contrasts &lt;- list(NTC_Cre_vs_NTC_ERT2 = &quot;NTC_Cre_vs_NTC_ERT2&quot;, Ik_Cre_vs_Ik_ERT2 = &quot;Ik_Cre_vs_Ik_ERT2&quot;, Ik_ERT2_vs_NTC_ERT2 = &quot;Ik_ERT2_vs_NTC_ERT2&quot;, Ik_Cre_vs_NTC_Cre = &quot;Ik_Cre_vs_NTC_Cre&quot;, Cre_Ik_interaction = &quot;Cre_Ik_interaction&quot;) lapply(contrasts, function(x) { deanno[, grep(x, colnames(deanno))] %&gt;% dplyr::filter(.[,2] &lt; 0.05) %&gt;% summarise(condition = x, upreg = nrow(.[.[,1] &gt; 0.58, ]), dnreg = nrow(.[.[,1] &lt; -0.58, ])) }) %&gt;% bind_rows() %&gt;% kableExtra::kable() condition upreg dnreg NTC_Cre_vs_NTC_ERT2 176 99 Ik_Cre_vs_Ik_ERT2 227 46 Ik_ERT2_vs_NTC_ERT2 1680 1183 Ik_Cre_vs_NTC_Cre 1681 1165 Cre_Ik_interaction 121 52 deanno %&gt;% dplyr::filter(padj_Cre_Ik_interaction &lt; 0.05) %&gt;% dplyr::arrange(padj_Cre_Ik_interaction) %&gt;% dplyr::select(1,7,12,14:17) %&gt;% dplyr::mutate_at(2, function(x) round(x, 3)) %&gt;% dplyr::mutate_at(4:7, function(x) round(x, 2)) %&gt;% dplyr::mutate_at(3, function(x) formatC(x, format = &quot;e&quot;, digits = 3)) %&gt;% DT::datatable(escape = F, rownames = F, options = list( columnDefs = list(list(className = &#39;dt-right&#39;, targets = 2)), scrollX = TRUE)) 2.6 Volano plot plotdat &lt;- lapply(contrasts, function(contrast) { x &lt;- deanno[, c(1,grep(contrast, colnames(deanno)))] colnames(x)[2:3] &lt;- c(&quot;L2FC&quot;, &quot;qval&quot;) x$col &lt;- &quot;B&quot; x[which(x$qval &lt; 0.05 &amp; x$L2FC &gt; 0.58),]$col &lt;- &quot;A&quot; x[which(x$qval &lt; 0.05 &amp; x$L2FC &lt; -0.58),]$col &lt;- &quot;C&quot; if (any(x$qval &lt; 1e-100, na.rm = T)) x[which(x$qval&lt;1e-100),]$qval &lt;- 1e-100 topg &lt;- top_n(x, 50, -qval)$gene_symbol x$label &lt;- ifelse(x$gene_symbol %in% c(topg) &amp; x$qval &lt; 1e-10, x$gene_symbol, &quot;&quot;) x$comparison &lt;- contrast return(x) }) %&gt;% bind_rows() (p &lt;- ggplot(plotdat, aes(x = L2FC, y = -log10(qval))) + geom_hline(yintercept = -log10(0.01), color = &quot;firebrick&quot;, alpha = .2, lty=2) + geom_vline(xintercept = 0, color = &quot;firebrick&quot;, alpha = .2, lty=2) + geom_point(aes(col=col), alpha = .5, size=1) + ggrepel::geom_text_repel(aes(label = label)) + facet_wrap(~comparison, nrow = 3, scales = &quot;free_y&quot;) + scale_color_manual(values = c(&quot;firebrick4&quot;,&quot;grey40&quot;,&quot;steelblue4&quot;)) + scale_x_continuous(name = &quot;Fold change (log2)&quot;) + scale_y_continuous(name = &quot;Significance (-log10 p-value)&quot;) + theme(text = element_text(size = 14, color = &quot;black&quot;, family = &quot;Arial&quot;), axis.text = element_text(size = 11, color = &quot;black&quot;, family = &quot;Arial&quot;), panel.grid = element_blank(), panel.background = element_blank(), panel.border = element_rect(color = &quot;black&quot;, fill = NA), strip.background = element_blank(), strip.text = element_text(size = 12, color = &quot;black&quot;, family = &quot;Arial&quot;), legend.position = &quot;none&quot;)) 2.7 Full GSEA Note: This analysis was run on all REACTOME, KEGG, MSigDB Hallmark, and WIKIPATHWAY database gene sets (with some minor filtering for irrelevant sets). This is useful for data exploration but will inflate q-value/padj simply due to the large number of tests performed, hence these results should be used to identify potentially interesting pathways before performing more selective enrichment testing for more appropriate statistical values. library(msigdbr) library(fgsea) msig &lt;- rbind(msigdbr(species = &quot;Mus musculus&quot;, category = &quot;H&quot;), msigdbr(species = &quot;Mus musculus&quot;, category = &quot;C2&quot;, subcategory = &quot;CP:REACTOME&quot;), msigdbr(species = &quot;Mus musculus&quot;, category = &quot;C2&quot;, subcategory = &quot;CP:KEGG&quot;), msigdbr(species = &quot;Mus musculus&quot;, category = &quot;C2&quot;, subcategory = &quot;CP:WIKIPATHWAYS&quot;)) gs &lt;- split(msig$gene_symbol, msig$gs_name) internal_gs &lt;- readRDS(&quot;../../resources/internal_genesets_Mm.rds&quot;) gs &lt;- c(gs, internal_gs) gs &lt;- gs[!grepl(paste0(&quot;sperm|xeno|graft|naba|spinal|neuro|sclerosis&quot;, &quot;|tion_of_hscs|photo|leish|diabetes|lupus|ebola&quot;, &quot;|staph|syndrome|myo|nicotin|asthma|thyroid_stim&quot;, &quot;|gastrin|alcohol|nutrient|carcinoma|muscle_contr&quot;, &quot;|metapathway|amyloid|fusion_mutants|circadian&quot;), names(gs), ignore.case = T)] gl &lt;- lapply(contrasts, function(contrast) { tmp &lt;- deanno[,grep(contrast, colnames(deanno))] colnames(tmp) &lt;- c(&quot;L2FC&quot;,&quot;qval&quot;) tmp &lt;- (tmp$L2FC * (-log10(tmp$qval+1e-50)/10)) names(tmp) &lt;- deanno$gene_symbol tmp &lt;- tmp[!is.na(names(tmp)) &amp; names(tmp) != &quot;&quot; &amp; !is.na(tmp) &amp; is.finite(tmp)] tmp &lt;- tmp[order(-tmp)] tmp[!duplicated(names(tmp))] }) gseres &lt;- lapply(gl, function(x) { fgseaSimple(pathways = gs, stats = x, nperm = 1000, minSize = 10, maxSize = 500) %&gt;% dplyr::filter(lengths(leadingEdge) &gt; 3) %&gt;% arrange(pval) }) wb &lt;- createWorkbook() lapply(contrasts, function(contrast) { gse &lt;- as.data.frame(gseres[[contrast]]) addWorksheet(wb, sheetName = contrast) writeData(wb, gse, sheet = contrast, rowNames = F) freezePane(wb, sheet = contrast, firstRow = TRUE, firstCol = TRUE) return(NULL) }) ## $NTC_Cre_vs_NTC_ERT2 ## NULL ## ## $Ik_Cre_vs_Ik_ERT2 ## NULL ## ## $Ik_ERT2_vs_NTC_ERT2 ## NULL ## ## $Ik_Cre_vs_NTC_Cre ## NULL ## ## $Cre_Ik_interaction ## NULL saveWorkbook(wb, &quot;../results/IkKO_bcatGOF_DE_fullGSEA.2021-03-05.xlsx&quot;, overwrite = T) lapply(contrasts, function(x) { tmp &lt;- gseres[[x]] %&gt;% dplyr::filter(pval &lt; 0.5) %&gt;% dplyr::select(pathway, NES) tmp[,2] &lt;- round(tmp[,2], 3) colnames(tmp)[2] &lt;- x return(tmp) }) %&gt;% Reduce(f = function(x,y) { merge(x, y, by=&quot;pathway&quot;) }) %&gt;% arrange(Cre_Ik_interaction) %&gt;% mutate(pathway = ifelse(pathway %in% names(internal_gs), pathway, paste0(&#39;&lt;a href=https://www.gsea-msigdb.org/gsea/msigdb/cards/&#39;, pathway, &#39;.html&gt;&#39;, substr(pathway, 0,30), &#39;&lt;/a&gt;&#39;))) %&gt;% DT::datatable(escape = F, rownames = F, options = list( scrollX = TRUE)) 2.8 Select GSEA poi &lt;- c(&quot;HALLMARK_MYC_TARGETS_V1&quot;,&quot;HALLMARK_MYC_TARGETS_V2&quot;, &quot;REACTOME_DEATH_RECEPTOR_SIGNALLING&quot;, &quot;REACTOME_MITOTIC_G1_PHASE_AND_G1_S_TRANSITION&quot;, &quot;HALLMARK_KRAS_SIGNALING_UP&quot;, &quot;REACTOME_SIGNALING_BY_NOTCH&quot;, &quot;Cosgun_Bcatenin_GOF_UP&quot;, &quot;Schjerven_Ikzf1_KO_UP&quot;, &quot;GSE73238_CD8_TcfLefDKO_UP&quot;) gsub &lt;- gs[names(gs) %in% poi] gseres &lt;- lapply(gl, function(x) { fgseaSimple(pathways = gsub, stats = x, nperm = 10000, minSize = 10, maxSize = 500) %&gt;% arrange(pval) }) saveRDS(gseres, &quot;../processed_data/RNAseq/IkKO_bcatGOF_DE_subGSEA.2021-03-05.rds&quot;) wb &lt;- createWorkbook() lapply(names(gseres), function(contrast) { gse &lt;- as.data.frame(gseres[[contrast]]) addWorksheet(wb, sheetName = contrast) writeData(wb, gse, sheet = contrast, rowNames = F) freezePane(wb, sheet = contrast, firstRow = TRUE, firstCol = TRUE) return(gse) }) saveWorkbook(wb, &quot;../results/IkKO_bcatGOF_DE_subGSEA.2021-03-05.xlsx&quot;, overwrite = T) gseres &lt;- readRDS(&quot;../processed_data/RNAseq/IkKO_bcatGOF_DE_subGSEA.2021-03-05.rds&quot;) int_levels &lt;- gseres$Cre_Ik_interaction %&gt;% arrange(-NES) %&gt;% .$pathway lapply(names(gseres), function(x) { gseres[[x]] %&gt;% mutate(pvaltxt = ifelse(padj &lt; 0.001, &quot;***&quot;, ifelse(padj &lt; 0.01, &quot;**&quot;, ifelse(padj &lt; 0.05, &quot;*&quot;, &quot;-&quot;))), cond = x, score = -log10(padj)*NES) %&gt;% dplyr::select(pathway, score, pvaltxt, cond) }) %&gt;% bind_rows() %&gt;% mutate(cond=factor(cond, levels=unique(cond)), pathway = factor(pathway, levels=int_levels)) %&gt;% ggplot(aes(x=cond, y=pathway, fill=score, label=pvaltxt)) + geom_tile() + geom_text() + scale_x_discrete(expand=c(0,0), name=&quot;&quot;) + scale_y_discrete(expand=c(0,0), name=&quot;&quot;) + scale_fill_gradient2(low=&quot;steelblue4&quot;, mid=&quot;white&quot;, high=&quot;firebrick4&quot;) + theme_bw(base_size = 12, base_family = &quot;Arial&quot;) + theme(panel.background = element_blank(), panel.border = element_rect(color=&quot;black&quot;, fill=NA), axis.text.x = element_text(angle=45, hjust=1), axis.ticks = element_blank(), legend.position = &quot;none&quot;) 2.9 GSEA plots source(&quot;../../resources/fsea.R&quot;) library(rvg) library(officer) library(cowplot) ppt &lt;- read_pptx() pl &lt;- lapply(poi, function(path) { pathplots &lt;- lapply(names(gseres), function(contrast) { plot_fgsea(gseres[[contrast]], gl[[contrast]], gs, path) + ggtitle(contrast) + theme(plot.title = element_text(size=10)) }) title &lt;- ggdraw() + draw_label(path) combined &lt;- plot_grid(plotlist = pathplots, align = &quot;vh&quot;, ncol = 3) p &lt;- plot_grid(title, combined, ncol = 1, rel_heights = c(0.05, 1)) add_slide(x = ppt, layout = &quot;Title and Content&quot;, master = &quot;Office Theme&quot;) %&gt;% ph_with(value = dml(ggobj = p), location = ph_location(height = 3.5, width = 9, left = 0.25, top = 0.5), bg = &quot;transparent&quot;) return(p) }) names(pl) &lt;- poi print(ppt, target=&quot;../img/IkKO_bcatGOF_DE_GSEAplots.2021-03-05.pptx&quot;) pl$HALLMARK_MYC_TARGETS_V1 2.10 Downloads Differential expression results (xlsx). Full GSEA results for exploratory analysis (xlsx). GSEA subset for stats on selected pathways (xlsx). GSEA plots (vecotorised pptx). 2.11 Session info sessionInfo() ## R version 4.0.3 (2020-10-10) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Catalina 10.15.7 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] parallel stats4 stats graphics grDevices utils datasets ## [8] methods base ## ## other attached packages: ## [1] gdtools_0.2.3 cowplot_1.1.1 ## [3] officer_0.3.16 rvg_0.2.5 ## [5] fgsea_1.16.0 msigdbr_7.2.1 ## [7] EnsDb.Mmusculus.v79_2.99.0 ensembldb_2.14.0 ## [9] AnnotationFilter_1.14.0 GenomicFeatures_1.42.1 ## [11] AnnotationDbi_1.52.0 DT_0.17 ## [13] openxlsx_4.2.3 DESeq2_1.30.1 ## [15] SummarizedExperiment_1.20.0 Biobase_2.50.0 ## [17] MatrixGenerics_1.2.1 matrixStats_0.58.0 ## [19] GenomicRanges_1.42.0 GenomeInfoDb_1.26.2 ## [21] IRanges_2.24.1 S4Vectors_0.28.1 ## [23] BiocGenerics_0.36.0 tximport_1.18.0 ## [25] forcats_0.5.1 stringr_1.4.0 ## [27] dplyr_1.0.4 purrr_0.3.4 ## [29] readr_1.4.0 tidyr_1.1.3 ## [31] tibble_3.1.0 ggplot2_3.3.3 ## [33] tidyverse_1.3.0 ## ## loaded via a namespace (and not attached): ## [1] uuid_0.1-4 readxl_1.3.1 backports_1.2.1 ## [4] fastmatch_1.1-0 BiocFileCache_1.14.0 systemfonts_1.0.1 ## [7] lazyeval_0.2.2 splines_4.0.3 BiocParallel_1.24.1 ## [10] crosstalk_1.1.1 digest_0.6.27 htmltools_0.5.1.1 ## [13] fansi_0.4.2 magrittr_2.0.1 memoise_2.0.0 ## [16] Biostrings_2.58.0 annotate_1.68.0 modelr_0.1.8 ## [19] svglite_2.0.0 askpass_1.1 prettyunits_1.1.1 ## [22] colorspace_2.0-0 blob_1.2.1 rvest_0.3.6 ## [25] rappdirs_0.3.3 ggrepel_0.9.1 haven_2.3.1 ## [28] xfun_0.21 crayon_1.4.1 RCurl_1.98-1.2 ## [31] jsonlite_1.7.2 genefilter_1.72.1 survival_3.2-7 ## [34] glue_1.4.2 kableExtra_1.3.4 gtable_0.3.0 ## [37] zlibbioc_1.36.0 XVector_0.30.0 webshot_0.5.2 ## [40] DelayedArray_0.16.2 scales_1.1.1 DBI_1.1.1 ## [43] Rcpp_1.0.6 viridisLite_0.3.0 xtable_1.8-4 ## [46] progress_1.2.2 bit_4.0.4 htmlwidgets_1.5.3 ## [49] httr_1.4.2 RColorBrewer_1.1-2 ellipsis_0.3.1 ## [52] pkgconfig_2.0.3 XML_3.99-0.5 farver_2.1.0 ## [55] sass_0.3.1 dbplyr_2.1.0 locfit_1.5-9.4 ## [58] utf8_1.1.4 tidyselect_1.1.0 labeling_0.4.2 ## [61] rlang_0.4.10 munsell_0.5.0 cellranger_1.1.0 ## [64] tools_4.0.3 cachem_1.0.4 cli_2.3.1 ## [67] generics_0.1.0 RSQLite_2.2.3 broom_0.7.5 ## [70] evaluate_0.14 fastmap_1.1.0 yaml_2.2.1 ## [73] knitr_1.31 bit64_4.0.5 fs_1.5.0 ## [76] zip_2.1.1 xml2_1.3.2 biomaRt_2.46.3 ## [79] compiler_4.0.3 rstudioapi_0.13 curl_4.3 ## [82] reprex_1.0.0 geneplotter_1.68.0 bslib_0.2.4 ## [85] stringi_1.5.3 highr_0.8 lattice_0.20-41 ## [88] ProtGenerics_1.22.0 Matrix_1.3-2 vctrs_0.3.6 ## [91] pillar_1.5.0 lifecycle_1.0.0 jquerylib_0.1.3 ## [94] data.table_1.14.0 bitops_1.0-6 rtracklayer_1.50.0 ## [97] R6_2.5.0 bookdown_0.21 gridExtra_2.3 ## [100] assertthat_0.2.1 openssl_1.4.3 withr_2.4.1 ## [103] GenomicAlignments_1.26.0 Rsamtools_2.6.0 GenomeInfoDbData_1.2.4 ## [106] hms_1.0.0 grid_4.0.3 rmarkdown_2.7 ## [109] lubridate_1.7.10 "],["ikaros-kobcat-gof-de-1.html", "Section3 Ikaros KO/Bcat GOF DE 3.1 Background 3.2 Setup 3.3 Load data 3.4 Combine 3.5 Downloads 3.6 Session info", " Section3 Ikaros KO/Bcat GOF DE 3.1 Background ..placeholder… 3.2 Setup library(tidyverse) library(openxlsx) library(DT) 3.3 Load data deres &lt;- readRDS(&quot;../processed_data/RNAseq/IkKO_bcatGOF_DE.2021-03-05.rds&quot;) dbres &lt;- read.csv(&quot;../processed_data/ChIPseq/Ctnnb1-GOF_Ikzf1-KO_DB_res.2021-03-02.csv&quot;) 3.4 Combine desub &lt;- deres[match(dbres$ensemblID, deres$ensembl_id), 3:17] colnames(desub) &lt;- paste0(&quot;Expr_&quot;, colnames(desub)) dbcomb &lt;- cbind(dbres[,c(5:6,1:4,7:17)], desub) %&gt;% dplyr::filter(!is.na(Expr_av_expr)) %&gt;% arrange(Ctnnb1_qval) write.xlsx(dbcomb, &quot;../results/IkKO_bcatGOF_DB_DE.2021-03-08.xlsx&quot;, firstCol=T, firstRow=T) 3.5 Downloads Combined DB-DE results table (xlsx). 3.6 Session info sessionInfo() ## R version 4.0.3 (2020-10-10) ## Platform: x86_64-apple-darwin17.0 (64-bit) ## Running under: macOS Catalina 10.15.7 ## ## Matrix products: default ## BLAS: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRblas.dylib ## LAPACK: /Library/Frameworks/R.framework/Versions/4.0/Resources/lib/libRlapack.dylib ## ## locale: ## [1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8 ## ## attached base packages: ## [1] stats graphics grDevices utils datasets methods base ## ## other attached packages: ## [1] DT_0.17 openxlsx_4.2.3 forcats_0.5.1 stringr_1.4.0 ## [5] dplyr_1.0.4 purrr_0.3.4 readr_1.4.0 tidyr_1.1.3 ## [9] tibble_3.1.0 ggplot2_3.3.3 tidyverse_1.3.0 ## ## loaded via a namespace (and not attached): ## [1] tidyselect_1.1.0 xfun_0.21 bslib_0.2.4 haven_2.3.1 ## [5] colorspace_2.0-0 vctrs_0.3.6 generics_0.1.0 htmltools_0.5.1.1 ## [9] yaml_2.2.1 utf8_1.1.4 rlang_0.4.10 jquerylib_0.1.3 ## [13] pillar_1.5.0 withr_2.4.1 glue_1.4.2 DBI_1.1.1 ## [17] dbplyr_2.1.0 modelr_0.1.8 readxl_1.3.1 lifecycle_1.0.0 ## [21] munsell_0.5.0 gtable_0.3.0 cellranger_1.1.0 zip_2.1.1 ## [25] rvest_0.3.6 htmlwidgets_1.5.3 evaluate_0.14 knitr_1.31 ## [29] fansi_0.4.2 broom_0.7.5 Rcpp_1.0.6 backports_1.2.1 ## [33] scales_1.1.1 jsonlite_1.7.2 fs_1.5.0 hms_1.0.0 ## [37] digest_0.6.27 stringi_1.5.3 bookdown_0.21 grid_4.0.3 ## [41] cli_2.3.1 tools_4.0.3 magrittr_2.0.1 sass_0.3.1 ## [45] crayon_1.4.1 pkgconfig_2.0.3 ellipsis_0.3.1 xml2_1.3.2 ## [49] reprex_1.0.0 lubridate_1.7.10 rstudioapi_0.13 assertthat_0.2.1 ## [53] rmarkdown_2.7 httr_1.4.2 R6_2.5.0 compiler_4.0.3 "],["appendix.html", "Section4 Appendix 4.1 Gene set sources", " Section4 Appendix 4.1 Gene set sources Masouleh et al. (2014) Prdm1/Blimp1 repressed genes defined by Prdm1-KO in pro- and pre-B cells Schjerven et al. (2017) Ikzf1 activated/respressed genes defined by Ikzf1 References "],["references.html", "References", " References "]]
